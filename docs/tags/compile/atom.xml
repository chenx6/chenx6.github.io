<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh_CN">
	<title>二进制咸鱼的自我救赎 - compile</title>
	<subtitle>幸福往往是摸的透彻，而敬业的心却常常隐藏。</subtitle>
	<link href="https://chenx6.github.io/tags/compile/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://chenx6.github.io/"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2022-05-21T00:00:00+00:00</updated>
	<id>https://chenx6.github.io/tags/compile/atom.xml</id>
	<entry xml:lang="zh_CN">
		<title>关于 C 语言编译的那些破事</title>
		<published>2022-05-21T00:00:00+00:00</published>
		<updated>2022-05-21T00:00:00+00:00</updated>
		<link rel="alternate" href="https://chenx6.github.io/post/compile_cheatsheet/" type="text/html"/>
		<id>https://chenx6.github.io/post/compile_cheatsheet/</id>
		<content type="html">&lt;p&gt;C 和 C++ 的编译是真的痛苦，会出现一堆离谱的问题。所以我特地写一篇文章讲一下这些破事，并且提供一些样例代码方便复制黏贴。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;编译过程简述&quot;&gt;编译过程简述&lt;&#x2F;h2&gt;
&lt;p&gt;在网上能找到一堆的编译流程相关的博客，而且肯定比我讲的正确，所以这里我就简单概括下。&lt;&#x2F;p&gt;
&lt;p&gt;现在很少有程序能只依赖与 C 标准库和系统 API 了，所以会有一堆的外部依赖库。要想编译成功，得让编译器和链接器都知道去哪找这些库，怎么链接上。于是就有了一堆的编译管理工具。像 CMake 和 Meson 是负责生成编译的脚本，make 和 ninja 则是负责执行编译任务，然后是 gcc 和 clang 将代码编译成目标文件，最后有 ld, gold, mold 将目标文件进行链接生成可执行文件。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;CMake -&amp;gt; make  -&amp;gt; gcc   -&amp;gt; ld   -&amp;gt; 可执行文件
Meson    ninja    clang    gold
Bazel    ...      zig cc   lld
...               ...      mold
                           ...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;编译系统&quot;&gt;编译系统&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;Meson&quot;&gt;Meson&lt;&#x2F;h3&gt;
&lt;p&gt;样例代码&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;meson&quot; class=&quot;language-meson z-code&quot;&gt;&lt;code class=&quot;language-meson&quot; data-lang=&quot;meson&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# 指定项目名称，使用语言，默认选项
project(&amp;#39;project name&amp;#39;, &amp;#39;cpp&amp;#39;
        default_options : [&amp;#39;c_std=c11&amp;#39;, &amp;#39;cpp_std=c++11&amp;#39;])
# 指定头文件位置
incdir = include_directories(&amp;#39;include&amp;#39;)
#（可选）使用 math 库
cc = meson.get_compiler(&amp;#39;c&amp;#39;)
m_dep = cc.find_library(&amp;#39;m&amp;#39;)
#（可选）使用 `dependency` 寻找库依赖
zdep = dependency(&amp;#39;zlib&amp;#39;, version: &amp;#39;&amp;gt;=1.2.8&amp;#39;)
#（可选）子目录
subdir(&amp;#39;tests&amp;#39;)
# 指定代码文件位置，头文件位置来生成可执行文件
utils = [&amp;#39;src&#x2F;logger.cpp&amp;#39;, &amp;#39;src&#x2F;utils.cpp&amp;#39;]
# 可执行文件的相关设置
executable(&amp;#39;client&amp;#39;, &amp;#39;src&#x2F;main_client.cpp&amp;#39;, &amp;#39;src&#x2F;client.cpp&amp;#39;, utils, 
           include_directories : incdir,
           dependencies : m_dep
           cpp_args: [],
           c_args: [],
           link_args : &amp;#39;&amp;#39;)
# 在 executable 函数中添加下面的设置可以编译 32 位，静态链接的程序
#    cpp_args: [&amp;#39;-m32&amp;#39;, &amp;#39;-static&amp;#39;],
#    c_args: [&amp;#39;-m32&amp;#39;, &amp;#39;-static&amp;#39;],
#    link_args : &amp;#39;-m32&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;常用编译命令&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; 生成编译所需文件&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;meson&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; setup builddir&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;wipe&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Debug 编译&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;meson&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; setup&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;buildtype&lt;&#x2F;span&gt; debug&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;reconfigure&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; 编译&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;meson&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; compile&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;C&lt;&#x2F;span&gt; builddir&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;更多的内容参考 &lt;a href=&quot;https:&#x2F;&#x2F;chenx6.github.io&#x2F;post&#x2F;compile_cheatsheet&#x2F;#refs&quot;&gt;#refs&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;CMake&quot;&gt;CMake&lt;&#x2F;h3&gt;
&lt;p&gt;样例代码&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmake&quot; class=&quot;language-cmake z-code&quot;&gt;&lt;code class=&quot;language-cmake&quot; data-lang=&quot;cmake&quot;&gt;&lt;span class=&quot;z-source z-cmake&quot;&gt;&lt;span class=&quot;z-comment z-line z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-cmake&quot;&gt;#&lt;&#x2F;span&gt; 指定项目名字，CMake 版本要求，C++ 版本要求&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-project z-cmake&quot;&gt;project&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;project_name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-cmake_minimum_required z-cmake&quot;&gt;cmake_minimum_required&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-VERSION z-cmake&quot;&gt;VERSION&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;3.0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-set z-cmake&quot;&gt;set&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-cmake&quot;&gt;CXX_STANDARD&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;11&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-comment z-line z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-cmake&quot;&gt;#&lt;&#x2F;span&gt; 使用 CMake 管理的库&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-find_package z-cmake&quot;&gt;find_package&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;OpenCV&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-REQUIRED z-cmake&quot;&gt;REQUIRED&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-include_directories z-cmake&quot;&gt;include_directories&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-text-substitution z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-substitution z-cmake&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-cmake&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-cmake&quot;&gt;OpenCV_INCLUDE_DIRS&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-cmake&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-link_directories z-cmake&quot;&gt;link_directories&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-text-substitution z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-substitution z-cmake&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-cmake&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-cmake&quot;&gt;OpenCV_LIBRARY_DIRS&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-cmake&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-comment z-line z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-cmake&quot;&gt;#&lt;&#x2F;span&gt; 使用由 pkg-config 管理的库&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-find_package z-cmake&quot;&gt;find_package&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;PkgConfig&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-generic z-cmake&quot;&gt;&lt;span class=&quot;z-variable z-function z-generic z-cmake&quot;&gt;pkg_search_module&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-generic z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-generic z-cmake&quot;&gt;LIBNOTIFY&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-generic z-cmake&quot;&gt;REQUIRED&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;libnotify&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-include_directories z-cmake&quot;&gt;include_directories&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-text-substitution z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-substitution z-cmake&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-cmake&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-cmake&quot;&gt;LIBNOTIFY_INCLUDE_DIRS&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-cmake&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-comment z-line z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-cmake&quot;&gt;#&lt;&#x2F;span&gt; 指定头文件目录&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-include_directories z-cmake&quot;&gt;include_directories&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;.&#x2F;include&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-cmake&quot;&gt;#&lt;&#x2F;span&gt; 扫描目录，获得目录下源代码位置&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-aux_source_directory z-cmake&quot;&gt;aux_source_directory&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;.&#x2F;src&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;SRC&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-add_executable z-cmake&quot;&gt;add_executable&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-unquoted z-cmake&quot;&gt;name&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-text-substitution z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-substitution z-cmake&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-cmake&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-cmake&quot;&gt;SRC&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-cmake&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-cmake&quot;&gt;#&lt;&#x2F;span&gt; 链接上库&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-cmake&quot;&gt;&lt;span class=&quot;z-support z-function z-target_link_libraries z-cmake&quot;&gt;target_link_libraries&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-cmake&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-text-substitution z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-substitution z-cmake&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-cmake&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-cmake&quot;&gt;PROJECT_NAME&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-cmake&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-text-substitution z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-substitution z-cmake&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-cmake&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-cmake&quot;&gt;OpenCV_LIBS&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-cmake&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-text-substitution z-cmake&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-substitution z-cmake&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-cmake&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-cmake&quot;&gt;LIBNOTIFY_LIBRARIES&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-cmake&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-cmake&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;常用命令&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; 编译&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-support z-function z-cd z-shell&quot;&gt;cd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; build&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;cmake&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; ..&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Debug 编译&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;cmake&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;DCMAKE_BUILD_TYPE&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;Debug ..&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;Makefile&quot;&gt;Makefile&lt;&#x2F;h3&gt;
&lt;p&gt;Makefile 的可读性真的是灾难级别的，下面这篇文章图文并茂，讲的很好，推荐阅读！！！&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;47390641&quot;&gt;Makefile由浅入深--教程、干货&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;库管理工具&quot;&gt;库管理工具&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;pkg-config&quot;&gt;pkg-config&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;选项&lt;&#x2F;th&gt;&lt;th&gt;作用&lt;&#x2F;th&gt;&lt;th&gt;样例&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;--cflags&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;查询这个库的所需要的 CFLAGS&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;pkg-config --cflags glib-2.0&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;--libs&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;查询链接上这个库的所需要的选项&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;pkg-config --libs zlib&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;–-list-all&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;列出所有的，可以被查找到的库&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;pkg-config –-list-all \| rg $库&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;设置 pkg-config 搜索路径&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;export&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;PKG_CONFIG_PATH&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&#x2F;usr&#x2F;lib&#x2F;pkgconfig&#x2F;:&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;PKG_CONFIG_PATH&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;官方文档参考 &lt;a href=&quot;https:&#x2F;&#x2F;chenx6.github.io&#x2F;post&#x2F;compile_cheatsheet&#x2F;#refs&quot;&gt;#refs&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;编译器&quot;&gt;编译器&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;GCC编译选项&quot;&gt;GCC编译选项&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;链接&quot;&gt;链接&lt;&#x2F;h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;选项&lt;&#x2F;th&gt;&lt;th&gt;作用&lt;&#x2F;th&gt;&lt;th&gt;样例&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;-l$library&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;链接上某个库&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;-lm&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;-static&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;静态链接库&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;-static-libstdc++&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;静态链接libstdc++&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;-Wl,$option&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;将链接选项传递给 ld&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h4 id=&quot;目录搜索&quot;&gt;目录搜索&lt;&#x2F;h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;选项&lt;&#x2F;th&gt;&lt;th&gt;作用&lt;&#x2F;th&gt;&lt;th&gt;样例&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;-I $dir&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;（大写的i）头文件搜索路径&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;-I .&#x2F;include&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;-L$dir&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;库文件搜索路径&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;-L.&#x2F;lib&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;--sysroot=$dir&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;头文件和库的搜索路径&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;--sysroot=&#x2F;usr&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;使用_zig_cc_进行跨平台编译&quot;&gt;使用 zig cc 进行跨平台编译&lt;&#x2F;h3&gt;
&lt;p&gt;zig cc 真是跨平台编译救星，下面演示下常见命令。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; 显示支持的 libc&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;zig&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; targets&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;jq&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; .libc&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; 直接编译&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;zig&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; cc &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;文件&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;target&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;目标&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;zig&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; cc hello.c&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;target&lt;&#x2F;span&gt; i386-linux-musl&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;static&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; 让 make 等工具使用&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;make&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; CC=&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;zig cc&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; CXX=&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;zig c++&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;参考文章 &lt;a href=&quot;https:&#x2F;&#x2F;chenx6.github.io&#x2F;post&#x2F;compile_cheatsheet&#x2F;#refs&quot;&gt;#refs&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;环境配置&quot;&gt;环境配置&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;Docker&#x2F;Podman&quot;&gt;Docker&#x2F;Podman&lt;&#x2F;h3&gt;
&lt;p&gt;Ubuntu image，添加 32 位支持，安装编译工具链，库和 CMake&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dockerfile&quot; class=&quot;language-dockerfile z-code&quot;&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span class=&quot;z-source z-dockerfile&quot;&gt;&lt;span class=&quot;z-keyword z-control z-dockerfile&quot;&gt;FROM&lt;&#x2F;span&gt; ubuntu:&lt;span class=&quot;z-entity z-name z-enum z-tag-digest&quot;&gt;18.04&lt;&#x2F;span&gt;

&lt;span class=&quot;z-keyword z-control z-dockerfile&quot;&gt;RUN &lt;&#x2F;span&gt;dpkg --add-architecture i386 &amp;amp;&amp;amp; \
    apt update &amp;amp;&amp;amp; \
    apt install -y gcc-multilib g++-multilib build-essential cmake
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;CentOS image，从本地复制一份 ninja，安装编译工具，相关的库和 Meson&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dockerfile&quot; class=&quot;language-dockerfile z-code&quot;&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span class=&quot;z-source z-dockerfile&quot;&gt;&lt;span class=&quot;z-keyword z-control z-dockerfile&quot;&gt;FROM&lt;&#x2F;span&gt; amd64&#x2F;centos:&lt;span class=&quot;z-entity z-name z-enum z-tag-digest&quot;&gt;7&lt;&#x2F;span&gt;

&lt;span class=&quot;z-keyword z-control z-dockerfile&quot;&gt;COPY&lt;&#x2F;span&gt; .&#x2F;ninja &#x2F;usr&#x2F;local&#x2F;bin

&lt;span class=&quot;z-keyword z-control z-dockerfile&quot;&gt;RUN &lt;&#x2F;span&gt;yum install python3 glibc-devel.i686 glibc-devel.x86_64 libgcc.i686 libgcc.x86_64 libstdc++-devel.i686 libstdc++-devel -y &amp;amp;&amp;amp; \
    yum group install &lt;span class=&quot;z-string z-quoted z-double z-dockerfile&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-dockerfile&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Development Tools&lt;span class=&quot;z-punctuation z-definition z-string z-end z-dockerfile&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; -y

&lt;span class=&quot;z-keyword z-control z-dockerfile&quot;&gt;RUN &lt;&#x2F;span&gt;python3 -m pip install meson -i https:&#x2F;&#x2F;opentuna.cn&#x2F;pypi&#x2F;web&#x2F;simple
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;使用容器进行编译。设置成运行完后删除，并将当前目录映射到 &amp;quot;&#x2F;src&amp;quot; 目录下，启动名字为 &lt;code&gt;$容器名字&lt;&#x2F;code&gt; 的容器。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;podman&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; run&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;rm&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;v&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;pwd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;:&#x2F;src&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;it&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;容器名字&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;Glibc_symver&quot;&gt;Glibc symver&lt;&#x2F;h3&gt;
&lt;p&gt;有时候在新系统上编译的可执行文件，在旧系统上运行时，会产生 &amp;quot;找不到函数&amp;quot; 错误。这时候可以通过指定 symver 来进行兼容旧版本。具体细节可以参考 &lt;a href=&quot;https:&#x2F;&#x2F;chenx6.github.io&#x2F;post&#x2F;compile_cheatsheet&#x2F;#Refs&quot;&gt;#Refs&lt;&#x2F;a&gt; 中的 &amp;quot;All about symbol versioning&amp;quot;，或者使用 &amp;quot;wheybags&#x2F;glibc_version_header&amp;quot; 这个项目。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c&quot; class=&quot;language-c z-code&quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;z-source z-c&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-c&quot;&gt;&lt;span class=&quot;z-variable z-function z-c&quot;&gt;__asm__&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-c&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-c&quot;&gt;&lt;span class=&quot;z-meta z-group z-c&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-c&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.symver fopen,fopen@GLIBC_2.2.5&lt;span class=&quot;z-punctuation z-definition z-string z-end z-c&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-c&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-c&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-c&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;Refs&quot;&gt;Refs&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gcc.gnu.org&#x2F;onlinedocs&#x2F;gcc-11.3.0&#x2F;gcc&#x2F;&quot;&gt;https:&#x2F;&#x2F;gcc.gnu.org&#x2F;onlinedocs&#x2F;gcc-11.3.0&#x2F;gcc&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.freedesktop.org&#x2F;wiki&#x2F;Software&#x2F;pkg-config&quot;&gt;https:&#x2F;&#x2F;www.freedesktop.org&#x2F;wiki&#x2F;Software&#x2F;pkg-config&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mesonbuild.com&#x2F;howtox.html&quot;&gt;https:&#x2F;&#x2F;mesonbuild.com&#x2F;howtox.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mesonbuild.com&#x2F;Meson-sample.html&quot;&gt;https:&#x2F;&#x2F;mesonbuild.com&#x2F;Meson-sample.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;andrewkelley.me&#x2F;post&#x2F;zig-cc-powerful-drop-in-replacement-gcc-clang.html&quot;&gt;https:&#x2F;&#x2F;andrewkelley.me&#x2F;post&#x2F;zig-cc-powerful-drop-in-replacement-gcc-clang.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;314912277&quot;&gt;All about symbol versioning&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wheybags&#x2F;glibc_version_header&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;wheybags&#x2F;glibc_version_header&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
</feed>
