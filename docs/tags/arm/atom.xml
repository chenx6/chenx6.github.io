<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh_CN">
	<title>二进制咸鱼的自我救赎 - arm</title>
	<subtitle>幸福往往是摸的透彻，而敬业的心却常常隐藏。</subtitle>
	<link href="https://chenx6.github.io/tags/arm/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://chenx6.github.io/"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2020-02-01T00:00:00+00:00</updated>
	<id>https://chenx6.github.io/tags/arm/atom.xml</id>
	<entry xml:lang="zh_CN">
		<title>斐讯 N1 折腾&#x2F;避坑笔记</title>
		<published>2020-02-01T00:00:00+00:00</published>
		<updated>2020-02-01T00:00:00+00:00</updated>
		<link rel="alternate" href="https://chenx6.github.io/post/n1_modify/" type="text/html"/>
		<id>https://chenx6.github.io/post/n1_modify/</id>
		<content type="html">&lt;p&gt;最近想搞一台小服务器来做 Git 服务器，下载 Bt 等事情，所以就在一堆便宜的 ARM 机顶盒&#x2F;NAS 中间挑选。最后看上了 100 RMB 左右的斐讯 N1，因为 N1 不用拆机就可以刷机。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;准备工作&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;空 U 盘&lt;&#x2F;li&gt;
&lt;li&gt;HDMI 线&lt;&#x2F;li&gt;
&lt;li&gt;一台斐讯 N1&lt;&#x2F;li&gt;
&lt;li&gt;键盘，鼠标&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;可以试试没有 HDMI 线和键鼠进行安装，好像进入 U 盘中的镜像时会自动开启 sshd 服务。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;安装系统&quot;&gt;安装系统&lt;&#x2F;h2&gt;
&lt;p&gt;基本分为三个步骤：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;将 N1 降级&lt;&#x2F;li&gt;
&lt;li&gt;插入带有镜像的 U 盘，然后使用 &lt;code&gt;adb shell reboot update&lt;&#x2F;code&gt; 进入 U 盘镜像中的系统&lt;&#x2F;li&gt;
&lt;li&gt;使用镜像中的脚本完成安装。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;这部分可以看其他人的图文教程（忘了截图了...）例如 &lt;a href=&quot;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;HintLee&#x2F;p&#x2F;9866485.html&quot;&gt;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;HintLee&#x2F;p&#x2F;9866485.html&lt;&#x2F;a&gt; 和 &lt;a href=&quot;https:&#x2F;&#x2F;www.aptx.xin&#x2F;phicomm-n1.html&quot;&gt;https:&#x2F;&#x2F;www.aptx.xin&#x2F;phicomm-n1.html&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;N1_降级&quot;&gt;N1 降级&lt;&#x2F;h3&gt;
&lt;p&gt;将 N1 的 USB 调试打开，然后用 webpad 的降级工具降级，工具运行完成后重启盒子的系统，虽然看起来版本号没有变，但是底层的版本号确实降级了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;镜像安装&quot;&gt;镜像安装&lt;&#x2F;h3&gt;
&lt;p&gt;首先是去找镜像。恩山上的帖子感觉有点复古，所以我就去外网找到了这个帖子：&lt;a href=&quot;https:&#x2F;&#x2F;forum.armbian.com&#x2F;topic&#x2F;7930-armbian-for-amlogic-s9xxx-kernel-5x&#x2F;&quot;&gt;https:&#x2F;&#x2F;forum.armbian.com&#x2F;topic&#x2F;7930-armbian-for-amlogic-s9xxx-kernel-5x&#x2F;&lt;&#x2F;a&gt;，但是这里面提供的镜像竟然是 rc 版本的，于是就又去 &lt;a href=&quot;https:&#x2F;&#x2F;forum.armbian.com&#x2F;topic&#x2F;12162-single-armbian-image-for-rk-aml-aw&#x2F;&quot;&gt;https:&#x2F;&#x2F;forum.armbian.com&#x2F;topic&#x2F;12162-single-armbian-image-for-rk-aml-aw&#x2F;&lt;&#x2F;a&gt; 找到了三种芯片合一镜像。虽然镜像解压出来有 5G 大小，但是这个 build 比较新，是 2 月 20 日左右编译的。我选择了 &amp;quot;Armbian_20.05.0-trunk_Arm-64_buster_current_5.5.1_20200227.img&amp;quot; 这个不带桌面的 Debian buster 系统的镜像。网盘地址：&lt;a href=&quot;https:&#x2F;&#x2F;yadi.sk&#x2F;d&#x2F;_rQgn_FosYuW0g&quot;&gt;https:&#x2F;&#x2F;yadi.sk&#x2F;d&#x2F;_rQgn_FosYuW0g&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;其次是刻录 U 盘，这里推荐 rufus，绿色版文件不到 10 MB。操作也非常简单。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;Annotation_2020-03-02_161540.png&quot; alt=&quot;0&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;刻录完成后打开 &amp;quot;BOOT&amp;quot; 分区，修改 &amp;quot;uEnv.txt&amp;quot;。将 &amp;quot;# aml s9xxx&amp;quot; 下面几行行去除注释，将下一行改成 N1 的 dtb 文件路径。&lt;&#x2F;p&gt;
&lt;p&gt;最后是惊险刺激的安装环节。在 adb 连接上盒子后，执行 &lt;code&gt;adb shell reboot update&lt;&#x2F;code&gt; ，然后迅速插入 U 盘，可以看到 U 盘中的 Debian 开始启动。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里有个坑点，如果是 USB 3.0 的 U 盘的话可能无法进入 U 盘中的系统，而是进入了 Recovery。导致前面情况的原因可能是盒子的供电不足，需要使用盒子上的另一个 USB 口对盒子进行供电。将 USB Type A 的双头线将电脑和盒子进行连接即可解决问题。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;Annotation_2020-03-02_161912.png&quot; alt=&quot;1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;先输入用户名 &amp;quot;root&amp;quot; 和默认密码 &amp;quot;1234&amp;quot; 登录系统后进行修改 root 用户的密码，新建普通用户。最后执行 &amp;quot;.&#x2F;install-aml.sh&amp;quot; 进行安装。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;系统配置&quot;&gt;系统配置&lt;&#x2F;h2&gt;
&lt;p&gt;安装完成后重启，拔出 U 盘，即可使用之前创建的用户登录系统。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;连接_WIFI&quot;&gt;连接 WIFI&lt;&#x2F;h3&gt;
&lt;p&gt;然后执行 &lt;code&gt;sudo nmtui&lt;&#x2F;code&gt;，使用 &amp;quot;nmtui&amp;quot; 进行配置网络。在 TUI 中使用键盘的方向键控制选项，使用回车进行确定，使用 Esc 进行返回。&lt;&#x2F;p&gt;
&lt;p&gt;选择 &amp;quot;Activate a connection&amp;quot; 就可以在 TUI 中连接 WIFI 了。选择网络，输入密码，连接网络一气呵成。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;配置_apt_源&quot;&gt;配置 apt 源&lt;&#x2F;h3&gt;
&lt;p&gt;还得配置下 apt 源。我用的 &lt;code&gt;sudo sed &amp;quot;s&#x2F;\&#x2F;\&#x2F;.*debian.org&#x2F;\&#x2F;\&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;g&amp;quot; &#x2F;etc&#x2F;apt&#x2F;sources.list -i&lt;&#x2F;code&gt; 进行修改 apt 源。先去掉命令最后的 -i 选项，看看文件是否正确修改，然后加上 -i 选项进行修改。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;启动_sshd&quot;&gt;启动 sshd&lt;&#x2F;h3&gt;
&lt;p&gt;最后看一下 sshd 是否启动：&lt;code&gt;sudo systemctl status sshd&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果没启动，那就 &lt;code&gt;sudo systemctl start sshd&lt;&#x2F;code&gt; 进行启动，然后在用电脑的 ssh 连接上盒子。当然，用 JuiceSSH 或者 Termux 连接也行。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;Annotation_2020-03-02_152424.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;配置相应的软件（未完）&quot;&gt;配置相应的软件（未完）&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;aria2：HTTP&#x2F;Bt_下载&quot;&gt;aria2：HTTP&#x2F;Bt 下载&lt;&#x2F;h3&gt;
&lt;p&gt;先安装上 aria2 &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt install aria2&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;然后在相应目录配置好 &lt;code&gt;$HOME&#x2F;.aria2&#x2F;aria2.conf&lt;&#x2F;code&gt; 还有 systemd 的 unit。我将通过 systemd 来实现开机启动 aria2。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;Annotation_2020-03-02_151859.png&quot; alt=&quot;7&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;由于在 aria2 的配置文件中设置了 &lt;code&gt;save-session&lt;&#x2F;code&gt;，所以得将 &lt;code&gt;save-session&lt;&#x2F;code&gt; 后面所指定的文件 &lt;code&gt;touch&lt;&#x2F;code&gt; 创建出来，要不然会报错。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;systemd 对于非 Linux 用户不太友好，但是对 Linux 用户来说还是方便啊。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;最后使用 &lt;code&gt;systemd --user enable aria2.service &amp;amp;&amp;amp; systemd --user start aria2.service&lt;&#x2F;code&gt; 启动 aria2。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;Annotation_2020-03-02_151817.png&quot; alt=&quot;6&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这个 service 会随着用户的退出而退出，所以要将当前用户设置为驻留用户：&lt;code&gt;loginctl enable-linger $USER&lt;&#x2F;code&gt;，这样就能实现开机启动，用户登出时不退出服务了。&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
